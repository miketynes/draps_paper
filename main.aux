\relax 
\citation{aws}
\citation{azure}
\citation{vm}
\citation{jithin2014virtual}
\citation{medina2014survey}
\citation{xu2014managing}
\citation{wang2014fresh,wang2015omo,wang2017seina}
\@writefile{toc}{\contentsline {section}{\numberline {I}Introduction}{1}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{This sentence is too informal and awkward. }}{1}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[the internet isn't consumed...]}}{1}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[is it really emerging? How old is it? If containerization is yesterday's news then isn't virtualization last year's news?]}}{1}}
\@writefile{loc}{\contentsline {subsection}{Replaced: \truncate {.3\textwidth }{Virtual machines are }}{1}}
\@writefile{loc}{\contentsline {subsection}{Deleted: \truncate {.3\textwidth }{s}}{1}}
\@writefile{loc}{\contentsline {subsection}{Replaced: \truncate {.3\textwidth }{is largely intractable because it entails }}{1}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{storing}}{1}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[reference chroot and others]}}{1}}
\@writefile{loc}{\contentsline {subsection}{Replaced: \truncate {.3\textwidth }{platforms}}{1}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[what does 'in the system view' mean here?]}}{1}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[so on which machine is the user calling \texttt  {docker run}? I am used to standalone docker] }}{1}}
\citation{xu2014managing}
\citation{secpod,men2012interface,cheng2014efficiently,cheng2013qbdj,cheng2016efficient,cheng2014efficient,edos,bhimani2016,bhimani2017,tang2012gpu,du2015gpu,zhao2012mesh}
\citation{felter2015updated}
\citation{slacker}
\citation{nathan2017comicon}
\citation{scope}
\citation{swarmkit}
\citation{bernstein2014containers}
\citation{gog2016firmament}
\citation{kaewkasi2017improvement}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[Are you really introducing it here? Hasnt this been done?]}}{2}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[clarify what a type is]}}{2}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[how cherry picked is this?]}}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {II}Related Work}{2}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[it will need to be clarified that firmament is the name of a technology ]}}{2}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[more on how this is a disadvantage??]}}{2}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[how?]}}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {III}Background and Motivation}{2}}
\newlabel{back}{{III}{2}}
\newlabel{back@cref}{{[section][3][]III}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-A}}Docker Containers}{2}}
\@writefile{loc}{\contentsline {subsection}{Replaced: \truncate {.3\textwidth }{\texttt  {docker run -it ubuntu bash}}}{2}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{Not sure how IEEE format wants in-line code examples. Further, what journal are we aiming for, and how do they want things? I should look at their templates.}}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-B}}Container Orchestration}{2}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[we need to say abit more about what that means. What about the state could be undesired vs desired?]}}{2}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[What is the point of this paragraph? We just jump in saying we can set limits at init time. (Note that we can also update them with \texttt  {docker update ...}). Is this even relevant for this paper, since we are talking about container \textit  {placement} which is a cluster-level, rather than container-level, decision process]}}{3}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[We may need a more clear example of what a 'task' is]}}{3}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[What is a filter? Would someone in this field know that or do we need to define? I certainly don't know.]}}{3}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[Is this still the case? I know its been a while since this project was last touched.]}}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Starting Dockers on a single machine\relax }}{3}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:start-single}{{1}{3}}
\newlabel{fig:start-single@cref}{{[figure][1][]1}{3}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[So, is the point here that the nodes arent 'heterogenous' and that \#containers may not be a good way to decide which node is ready to handle a new task? That seems reasonable to me. We should say so explicitly]}}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {IV}\texttt  {DRAPS}\nobreakspace  {} System}{3}}
\newlabel{sys}{{IV}{3}}
\newlabel{sys@cref}{{[section][4][]IV}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {IV-A}}Framework of Manager and Worker Nodes}{3}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[We weren't super clear about what it would mean to have \textit  {multiple managers}. I.e. is one of them just a backup in caise the main manager goes down?]}}{3}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[Do we need more on this? Its certainly not enough for \textit  {me} to fully understand how Swarmkit works before DRAPS is added...]}}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {IV-B}}\texttt  {DRAPS}\nobreakspace  {} modules}{3}}
\@writefile{loc}{\contentsline {subsection}{Deleted: \truncate {.3\textwidth }{mainly}}{3}}
\@writefile{loc}{\contentsline {subsection}{Replaced: \truncate {.3\textwidth }{are implemented }}{3}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[is it applicaiton-level or container-level?]}}{3}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[This is our first mention of time windows.]}}{3}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[We havent defined a bottleneck. Does that get done in a later section? Is that conventional?]}}{3}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[how]}}{3}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[for whom?]}}{3}}
\citation{Bansal:2006:IAA,Meyerson:2013:OMLB,Im:2015:TBO}
\citation{cloudlab}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[why are we talking about duplicated containers?]}}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Docker Framework with \texttt  {DRAPS}\nobreakspace  {} Implemention\relax }}{4}}
\newlabel{fig:drap}{{2}{4}}
\newlabel{fig:drap@cref}{{[figure][2][]2}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {V}Problem Formulation}{4}}
\newlabel{eq:work_util_ratio}{{1}{4}}
\newlabel{eq:work_util_ratio@cref}{{[equation][1][]1}{4}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[Is this DRF?]}}{4}}
\newlabel{eq:util_worker}{{2}{4}}
\newlabel{eq:util_worker@cref}{{[equation][2][]2}{4}}
\newlabel{eq:sched_problem}{{3}{4}}
\newlabel{eq:sched_problem@cref}{{[equation][3][]3}{4}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[This feels lemma dropped in, should we introduce it?]}}{4}}
\@writefile{loc}{\contentsline {subsection}{Deleted: \truncate {.3\textwidth }{ness}}{4}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[Should the full paper include the proof? It doesn't seem terribly difficult.]}}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {VI}\texttt  {DRAPS}\nobreakspace  {} in a Heterogeneous Cluster}{4}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[This is good: very clear.] point 1 is really how the system percieves its environment, 2 and 3 are the actions it can take.}}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {VI-A}}Identify Resource Demands from Containers}{4}}
\newlabel{understand}{{\unhbox \voidb@x \hbox {VI-A}}{4}}
\newlabel{understand@cref}{{[subsection][1][6]\unhbox \voidb@x \hbox {VI-A}}{4}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[do you think this is a little too easy?]}}{4}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[What is PI?. Do you mean $\pi $ ?]]}}{4}}
\newlabel{fig:cpu}{{3a}{5}}
\newlabel{fig:cpu@cref}{{[subfigure][1][3]3a}{5}}
\newlabel{sub@fig:cpu}{{a}{5}}
\newlabel{sub@fig:cpu@cref}{{[subfigure][1][3]3a}{5}}
\newlabel{fig:mem}{{3b}{5}}
\newlabel{fig:mem@cref}{{[subfigure][2][3]3b}{5}}
\newlabel{sub@fig:mem}{{b}{5}}
\newlabel{sub@fig:mem@cref}{{[subfigure][2][3]3b}{5}}
\newlabel{fig:netio}{{3c}{5}}
\newlabel{fig:netio@cref}{{[subfigure][3][3]3c}{5}}
\newlabel{sub@fig:netio}{{c}{5}}
\newlabel{sub@fig:netio@cref}{{[subfigure][3][3]3c}{5}}
\newlabel{fig:blockio}{{3d}{5}}
\newlabel{fig:blockio@cref}{{[subfigure][4][3]3d}{5}}
\newlabel{sub@fig:blockio}{{d}{5}}
\newlabel{sub@fig:blockio@cref}{{[subfigure][4][3]3d}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Resource demonds under different workloads on four services, MySQL, Tomcat, YUM, PI.\relax }}{5}}
\newlabel{fig:understand}{{3}{5}}
\newlabel{fig:understand@cref}{{[figure][3][]3}{5}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[make sure to reference fig 1a explicitly]}}{5}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[a request to who? is this a lead in to the operations? I think this discussion is too flowing and needs to be more organized.]}}{5}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[Is a reasonable expectation in the application setting that new containers will be of known service type? If so does it imply that we know the resource profile of new containers based on the profiles of the old ones?]}}{5}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[So can we let $\mathcal  {S}$ be the set of services, and in this case they would be \{MySQL, TomCat, YUM, and PI\}??]}}{5}}
\@writefile{loc}{\contentsline {subsection}{Replaced: \truncate {.3\textwidth }{is associated with }}{5}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[Or let $\mathcal  {C}_{s_i} = \{c_j \in \mathcal  {C} \text  { if } c_j \text  {is running} s_i\}$]}}{5}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[Note: I fixed the size of the angle braces above]}}{5}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[Also: this formula is too complicated and can be simplified by linearity as follows:]}}{5}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[I think we have some redundant indices here, we cant just use $i$ for everything: should be $c_j$.]}}{5}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[Wouldn't that be $\qopname  \relax o{arg}\qopname  \relax m{max}$? This just returns the fraction used by the dominant resource]}}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {VI-B}}Initial Container Placement}{5}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[it also fails to consider node heterogeneity, yes?]}}{5}}
\citation{aliyun}
\citation{dockerhub}
\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces Container Placement on Managers\relax }}{6}}
\newlabel{alg:initial}{{1}{6}}
\newlabel{alg:initial@cref}{{[algorithm][1][]1}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {VI-C}}Migrating a Container}{6}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[I think we should be more clear \textit  {in the text} about what a bottleneck is]}}{6}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[This obviously assumes that killing a container won't have any negative side effects. Which is true in most containerized settings, yes?]}}{6}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[I'm not sure if this is how we should use the $\forall $ or the $\rightarrow $ operators]}}{6}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[What the hell is a global service?]}}{6}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {2}{\ignorespaces Process \texttt  {DRAPS}\nobreakspace  {} Alert Message from $w_i$\relax }}{6}}
\newlabel{alg:migrate}{{2}{6}}
\newlabel{alg:migrate@cref}{{[algorithm][2][]2}{6}}
\@writefile{toc}{\contentsline {section}{\numberline {VII}Performance Evaluation}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {VII-A}}Implementation, Testbed and Workloads}{6}}
\@writefile{loc}{\contentsline {subsection}{Added: \truncate {.3\textwidth }{[so again, are we talking about heterogeny \textit  {of node type} in general?]}}{6}}
\newlabel{fig:25worker1}{{4a}{7}}
\newlabel{fig:25worker1@cref}{{[subfigure][1][4]4a}{7}}
\newlabel{sub@fig:25worker1}{{a}{7}}
\newlabel{sub@fig:25worker1@cref}{{[subfigure][1][4]4a}{7}}
\newlabel{fig:25worker2}{{4b}{7}}
\newlabel{fig:25worker2@cref}{{[subfigure][2][4]4b}{7}}
\newlabel{sub@fig:25worker2}{{b}{7}}
\newlabel{sub@fig:25worker2@cref}{{[subfigure][2][4]4b}{7}}
\newlabel{fig:25worker3}{{4c}{7}}
\newlabel{fig:25worker3@cref}{{[subfigure][3][4]4c}{7}}
\newlabel{sub@fig:25worker3}{{c}{7}}
\newlabel{sub@fig:25worker3@cref}{{[subfigure][3][4]4c}{7}}
\newlabel{fig:25worker1g}{{4d}{7}}
\newlabel{fig:25worker1g@cref}{{[subfigure][4][4]4d}{7}}
\newlabel{sub@fig:25worker1g}{{d}{7}}
\newlabel{sub@fig:25worker1g@cref}{{[subfigure][4][4]4d}{7}}
\newlabel{fig:25worker2g}{{4e}{7}}
\newlabel{fig:25worker2g@cref}{{[subfigure][5][4]4e}{7}}
\newlabel{sub@fig:25worker2g}{{e}{7}}
\newlabel{sub@fig:25worker2g@cref}{{[subfigure][5][4]4e}{7}}
\newlabel{fig:25worker3g}{{4f}{7}}
\newlabel{fig:25worker3g@cref}{{[subfigure][6][4]4f}{7}}
\newlabel{sub@fig:25worker3g}{{f}{7}}
\newlabel{sub@fig:25worker3g@cref}{{[subfigure][6][4]4f}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Memory and CPU resources usage comparison between Spread and \texttt  {DRAPS}\nobreakspace  {}placement scheme (100 containers)\relax }}{7}}
\newlabel{fig:noworkload25}{{4}{7}}
\newlabel{fig:noworkload25@cref}{{[figure][4][]4}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {VII-B}}Evaluation Results}{7}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {VII-B}1}Idle containers}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Number of containers on each worker\relax }}{7}}
\newlabel{fig:num}{{5}{7}}
\newlabel{fig:num@cref}{{[figure][5][]5}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Network consumption comparison on worker 3\relax }}{7}}
\newlabel{fig:25net}{{6}{7}}
\newlabel{fig:25net@cref}{{[figure][6][]6}{7}}
\bibstyle{myunsrt}
\bibdata{routing}
\bibcite{aws}{1}
\bibcite{azure}{2}
\bibcite{vm}{3}
\bibcite{jithin2014virtual}{4}
\bibcite{medina2014survey}{5}
\bibcite{xu2014managing}{6}
\bibcite{wang2014fresh}{7}
\bibcite{wang2015omo}{8}
\bibcite{wang2017seina}{9}
\bibcite{secpod}{10}
\bibcite{men2012interface}{11}
\bibcite{cheng2014efficiently}{12}
\bibcite{cheng2013qbdj}{13}
\bibcite{cheng2016efficient}{14}
\bibcite{cheng2014efficient}{15}
\bibcite{edos}{16}
\bibcite{bhimani2016}{17}
\bibcite{bhimani2017}{18}
\bibcite{tang2012gpu}{19}
\bibcite{du2015gpu}{20}
\bibcite{zhao2012mesh}{21}
\bibcite{felter2015updated}{22}
\bibcite{slacker}{23}
\bibcite{nathan2017comicon}{24}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {\unhbox \voidb@x \hbox {VII-B}2}Loaded containers}{8}}
\@writefile{toc}{\contentsline {section}{\numberline {VIII}Conclusion}{8}}
\@writefile{toc}{\contentsline {section}{References}{8}}
\bibcite{scope}{25}
\bibcite{swarmkit}{26}
\bibcite{bernstein2014containers}{27}
\bibcite{gog2016firmament}{28}
\bibcite{kaewkasi2017improvement}{29}
\bibcite{Bansal:2006:IAA}{30}
\bibcite{Meyerson:2013:OMLB}{31}
\bibcite{Im:2015:TBO}{32}
\bibcite{cloudlab}{33}
\bibcite{aliyun}{34}
\bibcite{dockerhub}{35}
\newlabel{fig:worker1}{{7a}{9}}
\newlabel{fig:worker1@cref}{{[subfigure][1][7]7a}{9}}
\newlabel{sub@fig:worker1}{{a}{9}}
\newlabel{sub@fig:worker1@cref}{{[subfigure][1][7]7a}{9}}
\newlabel{fig:worker2}{{7b}{9}}
\newlabel{fig:worker2@cref}{{[subfigure][2][7]7b}{9}}
\newlabel{sub@fig:worker2}{{b}{9}}
\newlabel{sub@fig:worker2@cref}{{[subfigure][2][7]7b}{9}}
\newlabel{fig:worker3}{{7c}{9}}
\newlabel{fig:worker3@cref}{{[subfigure][3][7]7c}{9}}
\newlabel{sub@fig:worker3}{{c}{9}}
\newlabel{sub@fig:worker3@cref}{{[subfigure][3][7]7c}{9}}
\newlabel{fig:worker1g}{{7d}{9}}
\newlabel{fig:worker1g@cref}{{[subfigure][4][7]7d}{9}}
\newlabel{sub@fig:worker1g}{{d}{9}}
\newlabel{sub@fig:worker1g@cref}{{[subfigure][4][7]7d}{9}}
\newlabel{fig:worker2g}{{7e}{9}}
\newlabel{fig:worker2g@cref}{{[subfigure][5][7]7e}{9}}
\newlabel{sub@fig:worker2g}{{e}{9}}
\newlabel{sub@fig:worker2g@cref}{{[subfigure][5][7]7e}{9}}
\newlabel{fig:worker3g}{{7f}{9}}
\newlabel{fig:worker3g@cref}{{[subfigure][6][7]7f}{9}}
\newlabel{sub@fig:worker3g}{{f}{9}}
\newlabel{sub@fig:worker3g@cref}{{[subfigure][6][7]7f}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Memory and CPU resources usage comparison between Spread and \texttt  {DRAPS}\nobreakspace  {}placement scheme (140 containers)\relax }}{9}}
\newlabel{fig:noworkload35}{{7}{9}}
\newlabel{fig:noworkload35@cref}{{[figure][7][]7}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Memory usage and container number on worker1\relax }}{9}}
\newlabel{fig:120workload}{{8}{9}}
\newlabel{fig:120workload@cref}{{[figure][8][]8}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Value of I/O Wait on worker1\relax }}{9}}
\newlabel{fig:iowait}{{9}{9}}
\newlabel{fig:iowait@cref}{{[figure][9][]9}{9}}
