%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 342.000000 180.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12 (Build 16A323) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 342 180
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 342 180
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Courier
%!FontType1-1.0: Courier 1.0000.1.0000
14 dict begin/FontName /Courier def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /I put
dup 34 /n put
dup 35 /t put
dup 36 /e put
dup 37 /r put
dup 38 /a put
dup 39 /l put
dup 40 /space put
dup 41 /D put
dup 42 /i put
dup 43 /s put
dup 44 /b put
dup 45 /u put
dup 46 /d put
dup 47 /S put
dup 48 /o put
dup 49 /M put
dup 50 /g put
dup 51 /R put
dup 52 /f put
dup 53 /C put
dup 54 /G put
dup 55 /p put
dup 56 /W put
dup 57 /k put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1341 1 index div -838 2 index div 2177 3 index div 2231 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C0000001E6670676D00000000000000BC00000173676C7966000000000000023000002C40686561640000000000002E7000000036686865610000000000002EA800000024686D74780000000000002ECC000000706C6F63610000000000002F3C0000003A6D6178700000000000002F7800000020707265700000000000002F9800000096002A008D0077009D0097007700AE00000021FE710000039C001A04A200210000B800002C4BB800065058B101018E59B801FF85B800441DB9000600035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800092C4B535845441B2121592D0000020066FE96046605A4000300070047B800082FB800052FB8000810B80000D0B800002FB8000510B900030005F4B8000010B900040005F4B8000310B80009DC00BB00040002000000042BBB00020002000600042B30311311211125211121660400FC73031BFCE5FE96070EF8F27206290000000001004EFFE3045204C100300166BB00160006002B00042B41170036001600460016005600160066001600760016008600160096001600A6001600B6001600C6001600D60016000B5D410500E5001600F5001600025D00B800004558B800032F1BB90003000D3E59B800004558B8002E2F1BB9002E000D3E59B800004558B800282F1BB9002800073E59B8000310B8000CDC41050009000C0019000C000271411B0038000C0048000C0058000C0068000C0078000C0088000C0098000C00A8000C00B8000C00C8000C00D8000C00E8000C00F8000C000D5DBA00090003000C111239B8002E10B900130001F4410500E9001300F9001300025D41170038001300480013005800130068001300780013008800130098001300A8001300B8001300C8001300D80013000B5DB8002810B900190003F441170037001900470019005700190067001900770019008700190097001900A7001900B7001900C7











3D002C0016000000082BBF00030048003A002F00220016000000082B00BA0007000400072BB8000020457D6918440000
00>] def
/CharStrings 28 dict dup begin
/.notdef 0 def
/space 1 def
/C 2 def
/D 3 def
/G 4 def
/I 5 def
/M 6 def
/R 7 def
/S 8 def
/W 9 def
/a 10 def
/b 11 def
/d 12 def
/e 13 def
/f 14 def
/g 15 def
/i 16 def
/k 17 def
/l 18 def
/n 19 def
/o 20 def
/p 21 def
/r 22 def
/s 23 def
/t 24 def
/u 25 def
/Omegagreek 26 def
/Omegagreek.mono 27 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1341 -838 2177 2231}def
/UniqueID 4061491 def
currentdict currentfile eexec


473F55CABF9EA21171A892CC6E28264C960C1711562C2045FC286909E0E2B665C033AFCEEF5A6AC79C18B53909E5B9E41E86831F4DFB85DE650FD366C92B46A5EFE97F32B603D4677E0C48DE13304B36EF7825CE5196C366E5F3B56241525B074B925E267D61984CD2F95DE6EE6496C40F1C94E7EF9DFC22A3C3D96CEC6F2C036F4F909078296EA2137AF7B74638E668CF74ACE27D453F5ED824F3E1F3FB8704F57EFEC88DCAB983FA1BF50CF91D0FEB7BBDDE7A964E289DA814BFFC3D2D1DCBA8FBA8125587D65ECDE996011331D811CE8B4A12F210BAB58E172709CAA0192A2D0D2CC616DB4EB844C7F91D2EBD3F665754DDF6F43BC0B91EDB204F601C8CCDFC1E4D40794A99FCC027A6682063470F8A3A7EFB12A28A6BB72E8360F976D1C16F8D3BBC74AC5802173CF2B1C3ACC9751C45246E2727EC4C218C2CA0C764BC417C871FB8D4F5BC26AB69B33C2DBBCB6C504F66F24B296F92CBE2EFD010B267CDC1E774A5C0A43E7CFACE10A1353A5F4DA916C4DC22385D4DA65FB75757762CEDE79E01318386A28C1A0900E3A35528E7074DE94B8D809E01A484BFDB71E1ECB88FA5A8EC2BCA2B2F5314819076A19F92881C768095A809EBA2FCC6154674BA074270F94B80831C22EA5E817E2E1A1661DADDED6301FA19E6D25BA39B4EBC4A5C614DDAA3FE69D0F54F6BB41D47C23F29DB37500AC44A5B5599A347E62CF0E333B91CC7E1E2F7F120EBB8743F0F6055E70F6A8FE9D1839DC1C9AA69E5CF66956D00E879BCDBAEDDA8E421B894F2E8BD8C49F8D87E3C015E232FBD2C18C6A9753E409C74A490307C07F353ADD1B0338DCBA84C0C39915B33D0D0BF9730D03616C6D1D580FD04B187B0041EFE440EDDB7C7B771D1C0EED3568D6BF6A24766DB97B1E0A660F40C3BCE26ADAAC0DBDFCFC08B38EC68A884683E9321B2CA6F7068C02E8BB28F1232F88969A83CC6075AE52F9559061794FCCAAD110B10DB53F594F5D750B00B428415E434A2C9F0657AD6A54F537322A37CDC6D7FD6FA802EA49E84117020999EB508357BF793C0AEF3AC8750813482C7092B1B8CFC43AB156C78D7CFC6356693EFD12416A071CDF4F15138258A1594BB8788DBD0A323042777D84A4ABAD0DB6E7C797FAAC1E22D559A84BED22D61EA1B58D658C64930253E1686CF4227F601EB17F9A4D9C891716E78BBDA6E3ED5EFCEE33CB52867CDA6FBE33F9F70D17EA85A1B70EAA085E3F809E389D8EA373BC1106C32291B00AC6FAB9FF202719F90DED44D3446DEC566FD0D4E9B10C4FF2A9E47F3D41F4D2E5281ECCB30E4D5B5F85F6E63A3643DB01EB001ABB506B7221C2B45EEC2C31E29BC8C26B655C93B3576B86C200972266B659AEF1096F00C39E0E8092B1E91B40AAD842E18DC0ED73722980627DC82901775F86E80243B50573DF097BA1776AB7888D38D6A245E3F


15BD3E71E146791CF732E135521954BC879327CD48A4FE87E52490E4D7FD1E8C1B974B324E263203689C1045F56BD8CF2A0BAB2E878235C262979A4A081957C4A8CE49D9DB8B12F73D55BF16ABF3B2D1FE4354124A195293249479D0DDEB9D3651EFF2DE0155F5F7DC2BE9339760FD75B9C13533DFB6402968E7CD831972B7AAC45ED6A6319F7BEE4012844501E606D44E7CD15AF9DDE762DFD4046158A4CCD1DF95E395CD1EBCA830B4C52AAF078DA371CB1ACB8B83C875B3FD321285DDCE603CBB3DC34F2A6CBDBD4A3E7EEA12520C0FFD4D36AAD423873E2B93E96097056325325D0459E961318A5A344FDF84F7C3BB463F90BFE532A87737F4190163A767395C1BCCE24EC14C38CB7B39DD1AD3AF20B5F7D384B65AF008FCB04BD0BC51D87F39E426216E3AD619B7004733E392709AD5F9DDA013EA9329776FE4FF5BB04CA1D7643277F1CA1D4C0BE2AAC998C813591B62E0915D95B05CBB7BAE3D6B4875C33BB290E7AC425AC2765EFA5F10E1A99CBDBD510B6C753F104EB0F1BC590F02EB96654F8669C3367C8DD483F29EF74A1EBB22647EEB7AC3BCBAF1224FE198EE4B805E92475523F620BE8C162E96A867894DDA1ECD98B8B47048F4FE73E7BCE42DF2423D60ED67A647E45887A444D3F4D0CC8F77CB4EA529BFB737551BD2A82DB9C8008CE6FAB571DA9B0108B574461A345AB740A836287BEA9650E9FBEE833E0F50FFF19DAE974F8192925BC543E82403B6D2885EFA7D68AA69932941F15F7C1825B9086C3CD044D183015D7E66022B097C1416BD24E418E4CA7168949A33181EC58433CDA274BE41B4CC1B556E524A7B186BF0252BF5C73D5A4836EAD697BCF059A35EF103EFA626624BA33E04B68505357D2CD89B6CE9A8ED9F22C9EDFAE4834FF0E74BE7696B685C5A25AA7AEC410249FB0931C5E2579B4BEE1AA528A39B9C461DF2AE562BFFBBD5F0757F7A01F996A34D0C9ECA09268A10725D5F5F143337C1B50ACF52B5D27DBD51AB028A5A89B110033BE6EA7742DC798A85A2B884FDB0D03D5C492B40B9D1D7F09DD5AB520DC43649637BD9BCB7066B5C2D5BD21AE25F1E0EE09A6DB42C3846EEEDE26BB44220D74097B17BBD81B09CD54E2A470D685ED311C7526F1DE2B24A745DCD958BDF5419698E3FCC96E3294BEA59BF728C322E3534FE0A762722C45FCFE969A0BA833AE1FC70E911270C52F848301A11A804C35D4DF2D65C1FD61E0DDA7AE76092F27BEE2246522201D423E1C148CDD6402AB769CF1A98EB361704A9D8A8B03D045741272403FD624D62B67C745B0EE47879298119910F8E8869C006A7598180AF62C3FC5EBD3AF96F438E724634D5E2DA51ED50D63BCFF2241F587DE0BDF1ED3337BD06DB3E80B76DE524E3A9DB42BF21C377B38A604D3DFB62CF454203618D9FA560E764B3B79F771A8E2F6D5FB27D6531
4FAAE3465E2A67E7702A5782E67E1C38247E34153F7F720F8FA35B7566E593C7A5D102BBCA2C52FDD06C5AE3427F45043A8C91F2B6CA0C62E0D55B5D6015FA87F76C8A0EE64BD865B30ADCA43875078623B8A8F83E792979C5A66D15B60D3B20CD7DD8F7FCD9962F53ACDA04402BA76AC5D566AF0F80C17B41BCA54F8CC93574B528750A47C98CEB514EA09DB3ABDF3C88BF61C8EFCFD49334AA26166CBCD465B9FB6C4537FE1308467FEC22148DA3384F12FB9F238D4F6B7379F44B4E9B900B4212743CF990CF0BB2263A1F37FDB23DA2D537AEBE5784F809C987B6B0EC26BBF315E302FD7AC7F0E55C866D577D21D9AB525E1ACD60BCAF0F71DD08D482B82649362A72AC1590CDF5D33011F2D4DA281F3F8233D24AF57EBE576F136099CACFF178D9ADD14E0406AA9B26A2C878CC584C9EB3809E2E8428D0B3A0EA0C3D2CE13A7CCF94E6F43B1F31FF594E1CD7A4798B98E8EDC85B5FF3F9F4DE434BED1EBA9A5331A8566E1DF3015AEA46C951ADB6F91AE27A378F13097EB3C702804CC655FD0AB6A56FC470550832BFD0432BB3AF1795B16F00586CF9B60E5A2B75F2E26CF2B4C49953068911E3A01F6DF3AEE25ABF24D7B4B9436D7130D68ECF27D6A02B31DCB9665C356ABDA6A243C9426E909D3ED8FB7166E6E6B2CEF45695DC939F7DBA5CF788FB252B190BD04A2E7335887017BC542E93F5E4BFCF7E34571E74F15AB5CC083F529082117AD57926E66CB685137E6BEB8786A21F373FDA6DA792985A70C98E1E354E10881AA7CD5EE2A299FA6599DA47A485F8F9BA84C2BBCE986513C9F02A5859F8AF86D310501F258C04DEB0905689A5B345F1B80548B30DA471387F04E191F112244A18C97570DCAAEB3729746BBFE9615E0176D203590E5BC03BFC3B724239FE02C8D3E0AB446C35F49481ED668698981D11A25A1D10C46DD710A58F72CA0AB7C114D73FD1CC12CF9BC9BA12C6135462402AC7B0255984ED8CBBE0C8F28A857EDB767DE3A135ED4567511F3D2ED360E7E81E479A75C4238643EC0A4814B458AE82358E11EBC6073CA4C5A3F7CD7A02C934F047DB0201D6069B0BA7E92ABAA19FF55A3694C51E58263CB59A86FC6806975D9E178CAB2AB983C600EAEAE978A4FCCEBEEFF198B18773129BE868B6DCCCF913FD5413F6A6EE6FB9DDC03D80B25D317E8DC7A329878EF0A90F21DD06C8619CA08B1C0459DA8306042BF206CECB149476A63049490AB04B73F40DABB8A3391F44E24E4A4180FE45DA57C8257C5B64E23921E51DE5D26478CB8423BFC339AAF749F61310D6D97AD41FAD65335EF8671852249D187A461650E0D0275193F7D0AAD2798052ABEE64FA78835F05EB2AAE0051F8122BA13C88CE68FB5B3C5A8043D5BD0A2360734AA252BD969710590E0EA03EFDFEBB8AE81F0C84533AD5FC9BA678BC3DBC6468D40B105EE6
BBF05010D41592E09C17D612CBFFFE81EDFC26426AF71361C17B5795C38C3AD459D11F9D38666AECC9F686D7E57A17EDAF5558679C6F10BF5117F1368D305AB7A93A39A2D963F500AC79332F2996AD044D913222CAB3931E628CD4B8FBE6BD9D05A714F8531A061A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Courier cguidfix
/F1.1/Courier renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 342 180 rc
15 162.90958 m
321 162.90958 l
325.97055 162.90958 330 158.88014 330 153.90958 c
330 63.335106 l
330 58.364544 325.97055 54.335106 321 54.335106 c
15 54.335106 l
10.029437 54.335106 6 58.364544 6 63.335106 c
6 153.90958 l
6 158.88014 10.029437 162.90958 15 162.90958 c
h
15 162.90958 m
f
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -192 288 cm
207 125.09042 m
513 125.09042 l
517.97058 125.09042 522 129.11986 522 134.09042 c
522 224.66489 l
522 229.63545 517.97058 233.66489 513 233.66489 c
207 233.66489 l
202.02943 233.66489 198 229.63545 198 224.66489 c
198 134.09042 l
198 129.11986 202.02943 125.09042 207 125.09042 c
h
207 125.09042 m
S
0 i
/Cs2 SC
0.94600219 0.63287216 0.36234945 sc
CM
24 144.81383 m
312 144.81383 l
316.97055 144.81383 321 140.78439 321 135.81383 c
321 117.62234 l
321 112.65178 316.97055 108.62234 312 108.62234 c
24 108.62234 l
19.029438 108.62234 15 112.65178 15 117.62234 c
15 135.81383 l
15 140.78439 19.029438 144.81383 24 144.81383 c
h
24 144.81383 m
f
/Cs3 SC
0 sc
1 0 0 -1 168 126.71809 cm
/F1.1[ 14 0 0 -14 0 0]sf
-134.42188 5.5 m
(!"#$%"&'\(\)*+#%*,-#$.\(/#&#$\(/#0%$)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
/Cs2 SC
0.27825105 0.63397092 0.94530541 sc
CM
24 99.574471 m
96 99.574471 l
100.97057 99.574471 105 95.545029 105 90.574471 c
105 72.38298 l
105 67.412415 100.97057 63.38298 96 63.38298 c
24 63.38298 l
19.029438 63.38298 15 67.412415 15 72.38298 c
15 90.574471 l
15 95.545029 19.029438 99.574471 24 99.574471 c
h
24 99.574471 m
f
/Cs3 SC
0 sc
1 0 0 -1 60 81.478722 cm
-29.404785 5.5 m
(1&"&2$%)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
/Cs2 SC
0.27825105 0.63397092 0.94530541 sc
CM
132 99.574471 m
204 99.574471 l
208.97057 99.574471 213 95.545029 213 90.574471 c
213 72.38298 l
213 67.412415 208.97057 63.38298 204 63.38298 c
132 63.38298 l
127.02943 63.38298 123 67.412415 123 72.38298 c
123 90.574471 l
123 95.545029 127.02943 99.574471 132 99.574471 c
h
132 99.574471 m
f
/Cs3 SC
0 sc
1 0 0 -1 168 81.478722 cm
-29.404785 5.5 m
(1&"&2$%)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
/Cs2 SC
0.27825105 0.63397092 0.94530541 sc
CM
240 99.574471 m
312 99.574471 l
316.97055 99.574471 321 95.545029 321 90.574471 c
321 72.38298 l
321 67.412415 316.97055 63.38298 312 63.38298 c
240 63.38298 l
235.02943 63.38298 231 67.412415 231 72.38298 c
231 90.574471 l
231 95.545029 235.02943 99.574471 240 99.574471 c
h
240 99.574471 m
f
/Cs3 SC
0 sc
1 0 0 -1 276 81.478722 cm
-29.404785 5.5 m
(1&"&2$%)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
/Cs1 SC
0.87058824 0.67843139 0.14901961 sc
CM
87 180 m
249 180 l
253.97057 180 258 175.97057 258 171 c
258 162.86171 l
258 157.89114 253.97057 153.86171 249 153.86171 c
87 153.86171 l
82.029434 153.86171 78 157.89114 78 162.86171 c
78 171 l
78 175.97057 82.029434 180 87 180 c
h
87 180 m
f
/Cs3 SC
0 sc
1 0 0 -1 168 166.93085 cm
-84.013672 5.5 m
(3&4#\(50"+$"+-+\(6%0-7)[ 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
/Cs2 SC
0.3727459 0.79403174 0.80163503 sc
CM
9 27.143618 m
52.384617 27.143618 l
57.355179 27.143618 61.384617 23.11418 61.384617 18.143618 c
61.384617 9 l
61.384617 4.0294371 57.355179 0 52.384617 0 c
9 0 l
4.0294371 0 0 4.0294371 0 9 c
0 18.143618 l
0 23.11418 4.0294371 27.143618 9 27.143618 c
h
9 27.143618 m
f
/Cs3 SC
0 sc
1 0 0 -1 30.692308 13.571809 cm
-25.204102 5.5 m
(80%9$%)[ 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
/Cs2 SC
0.3727459 0.79403174 0.80163503 sc
CM
79.153847 27.143618 m
122.53846 27.143618 l
127.50903 27.143618 131.53847 23.11418 131.53847 18.143618 c
131.53847 9 l
131.53847 4.0294371 127.50903 0 122.53846 0 c
79.153847 0 l
74.183281 0 70.153847 4.0294371 70.153847 9 c
70.153847 18.143618 l
70.153847 23.11418 74.183281 27.143618 79.153847 27.143618 c
h
79.153847 27.143618 m
f
/Cs3 SC
0 sc
1 0 0 -1 100.84615 13.571809 cm
-25.204102 5.5 m
(80%9$%)[ 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
/Cs2 SC
0.3727459 0.79403174 0.80163503 sc
CM
149.30769 27.143618 m
192.69231 27.143618 l
197.66287 27.143618 201.69231 23.11418 201.69231 18.143618 c
201.69231 9 l
201.69231 4.0294371 197.66287 0 192.69231 0 c
149.30769 0 l
144.33713 0 140.30769 4.0294371 140.30769 9 c
140.30769 18.143618 l
140.30769 23.11418 144.33713 27.143618 149.30769 27.143618 c
h
149.30769 27.143618 m
f
/Cs3 SC
0 sc
1 0 0 -1 171 13.571809 cm
-25.204102 5.5 m
(80%9$%)[ 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
/Cs2 SC
0.3727459 0.79403174 0.80163503 sc
CM
219.46153 27.143618 m
262.84616 27.143618 l
267.81671 27.143618 271.84616 23.11418 271.84616 18.143618 c
271.84616 9 l
271.84616 4.0294371 267.81671 0 262.84616 0 c
219.46153 0 l
214.49098 0 210.46153 4.0294371 210.46153 9 c
210.46153 18.143618 l
210.46153 23.11418 214.49098 27.143618 219.46153 27.143618 c
h
219.46153 27.143618 m
f
/Cs3 SC
0 sc
1 0 0 -1 241.15384 13.571809 cm
-25.204102 5.5 m
(80%9$%)[ 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
/Cs2 SC
0.3727459 0.79403174 0.80163503 sc
CM
289.61539 27.143618 m
333 27.143618 l
337.97055 27.143618 342 23.11418 342 18.143618 c
342 9 l
342 4.0294371 337.97055 0 333 0 c
289.61539 0 l
284.64484 0 280.61539 4.0294371 280.61539 9 c
280.61539 18.143618 l
280.61539 23.11418 284.64484 27.143618 289.61539 27.143618 c
h
289.61539 27.143618 m
f
/Cs3 SC
0 sc
1 0 0 -1 311.30768 13.571809 cm
-25.204102 5.5 m
(80%9$%)[ 8.401367 8.401367 8.401367 8.401367 8.401367 0.000000 ] xS
0.1 w
[] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -192 288 cm
229.05692 259.68115 m
243.61952 225.93915 l
S
0 i
CM
51.93652 62.795368 m
51.344074 62.179733 l
51.894958 61.941982 l
h
51.93652 62.795368 m
f
0 J
0 j
1 0 0 -1 -192 288 cm
243.93652 225.20464 m
243.34407 225.82027 l
243.89496 226.05801 l
h
243.93652 225.20464 m
S
CM
36.803318 27.731226 m
37.277275 28.223734 l
36.836567 28.413939 l
h
36.803318 27.731226 m
f
1 0 0 -1 -192 288 cm
228.80331 260.26877 m
229.27728 259.77628 l
228.83656 259.58606 l
h
228.80331 260.26877 m
S
1 J
1 j
0.60000002 i
278.35941 259.9516 m
244.01859 225.6349 l
S
0 i
CM
51.452705 62.930588 m
51.806534 62.152897 l
52.230648 62.577309 l
h
51.452705 62.930588 m
f
0 J
0 j
1 0 0 -1 -192 288 cm
243.45271 225.06941 m
243.80653 225.84711 l
244.23065 225.42268 l
h
243.45271 225.06941 m
S
CM
86.812103 27.596006 m
86.529045 28.218161 l
86.189751 27.878632 l
h
86.812103 27.596006 m
f
1 0 0 -1 -192 288 cm
278.8121 260.40399 m
278.52905 259.78183 l
278.18976 260.12137 l
h
278.8121 260.40399 m
S
1 J
1 j
0.60000002 i
289.13531 260.2652 m
356.3176 225.28209 l
S
0 i
CM
165.02718 63.087391 m
164.17906 62.983994 l
164.45616 62.45182 l
h
165.02718 63.087391 m
f
0 J
0 j
1 0 0 -1 -192 288 cm
357.02719 224.91261 m
356.17905 225.01601 l
356.45618 225.54817 l
h
357.02719 224.91261 m
S
CM
96.56765 27.439203 m
97.246147 27.521921 l
97.02446 27.94766 l
h
96.56765 27.439203 m
f
1 0 0 -1 -192 288 cm
288.56766 260.56079 m
289.24615 260.47809 l
289.02444 260.05234 l
h
288.56766 260.56079 m
S
1 J
1 j
0.60000002 i
359.95041 259.57733 m
358.65063 226.05594 l
S
0 i
CM
166.61963 62.743458 m
166.35085 61.932438 l
166.95039 61.955685 l
h
166.61963 62.743458 m
f
0 J
0 j
1 0 0 -1 -192 288 cm
358.61963 225.25655 m
358.35086 226.06757 l
358.95041 226.04431 l
h
358.61963 225.25655 m
S
CM
167.9752 27.783136 m
168.19023 28.431955 l
167.71059 28.413357 l
h
167.9752 27.783136 m
f
1 0 0 -1 -192 288 cm
359.97519 260.21686 m
360.19022 259.56805 l
359.71057 259.58664 l
h
359.97519 260.21686 m
S
1 J
1 j
0.60000002 i
421.88446 260.2287 m
359.84979 225.32317 l
S
0 i
CM
167.15259 63.069138 m
167.70268 62.415379 l
167.99692 62.938286 l
h
167.15259 63.069138 m
f
0 J
0 j
1 0 0 -1 -192 288 cm
359.15259 224.93086 m
359.7027 225.58463 l
359.99692 225.06172 l
h
359.15259 224.93086 m
S
CM
230.44223 27.45746 m
230.00215 27.980465 l
229.76678 27.56214 l
h
230.44223 27.45746 m
f
1 0 0 -1 -192 288 cm
422.44223 260.54254 m
422.00217 260.01953 l
421.76678 260.43787 l
h
422.44223 260.54254 m
S
1 J
1 j
0.60000002 i
432.9021 259.9483 m
466.98514 225.63863 l
S
0 i
CM
275.54895 62.928932 m
274.77231 62.572803 l
275.19797 62.149948 l
h
275.54895 62.928932 m
f
0 J
0 j
1 0 0 -1 -192 288 cm
467.54895 225.07106 m
466.77231 225.4272 l
467.19797 225.85005 l
h
467.54895 225.07106 m
S
CM
240.45105 27.597662 m
241.07236 27.882565 l
240.73183 28.22085 l
h
240.45105 27.597662 m
f
1 0 0 -1 -192 288 cm
432.45105 260.40234 m
433.07236 260.11743 l
432.73181 259.77914 l
h
432.45105 260.40234 m
S
1 J
1 j
0.60000002 i
494.23526 259.82996 m
468.86032 225.77176 l
S
0 i
CM
276.38239 62.869762 m
276.61975 62.049004 l
277.10089 62.407475 l
h
276.38239 62.869762 m
f
0 J
0 j
1 0 0 -1 -192 288 cm
468.38239 225.13023 m
468.61975 225.951 l
469.10089 225.59253 l
h
468.38239 225.13023 m
S
CM
302.61761 27.656836 m
302.4277 28.313442 l
302.04282 28.026663 l
h
302.61761 27.656836 m
f
1 0 0 -1 -192 288 cm
494.61761 260.34317 m
494.4277 259.68655 l
494.04282 259.97333 l
h
494.61761 260.34317 m
S
ep
end
%%Trailer
%%EOF
