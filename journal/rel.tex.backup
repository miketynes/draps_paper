\section{Related Work}
Virtualization serves as one of the fundamental technologies in cloud computing systems. 
%In a virtualized computing environment, containers play an important role.
As a popular application, virtual machines (VMs) have been studied for decades.
However, in the reality, VMs suffer from noticeable
performance overhead, large storage requirement, and limited scalability~\cite{xu2014managing}.
More recently, containerization, a lightweight virtualization technique,  
is drawing increasingly popular in both industry and academic.

The benefits and challenges of containerized systems have been studied in many aspects.
A comprehensive performance study is presented in ~\cite{felter2015updated}, where it explores the traditional
virtual machine deployments, and contrast them with the use
of Linux containers. The evaluation focuses on overheads and experiments 
show that containers result in equal or better performance than VMs.
Although containers outperform VMs, 
the research~\cite{slacker} shows that the startup latency still considerably larger than expected.
This is due to a layered and distributed image architecture, in which copying package data accounts
for most of container startup time. The authors propose Slacker that can significantly reduce the startup latency.
While Slacker reduces the amount of copying and transferring packages, if the the image is locally available, the
startup could be even faster. CoMICon~\cite{nathan2017comicon} addresses the problem by sharing the image in a cooperative manner
From different aspect, SCoPe~\cite{scope} tries to manage the provisioning time for large scale containers. 
It presents a statistical model to characterize the provisioning time in terms of system features and this model
is used to guide provisioning strategy.

Besides the investigations on standalone containers, the cluster of containers is another important aspect in this field.
Docker Swarmkit~\cite{swarmkit} and Google Kubernetes~\cite{bernstein2014containers} are dominate cluster management tools in the market.
The authors in~\cite{gog2016firmament}, first, conduct a comparison study of scalabilities under both of them. Then, Firmament is proposed
to achieve low latency in large-scale clusters by using multiple min-cost max-flow algorithms. 
On the other hand, focusing on workload scheduling, the paper~\cite{kaewkasi2017improvement} describes an Ant Colony Optimization algorithm
for a cluster of Docker containers. However, the algorithm does not distinguish various containers, which are usually have a divese requirements.

In this paper, we investigate the container orchestration in the aspect of resource awareness. 
Starting from different images, the containers target various services, which results in different requirements on resources.


%From the network security aspect, 
%authors in~\cite{wang2015benefit} build a virtual environment based on containers. The research shows that
%although the container performs well in terms of performance, it is in securable in
%terms of security control.


%Containerized applications have been studied in many research projects.
%becoming increasingly popular in both industry and academic.
%Containerization
%Due to the benefits in development and deployment brought by containers, lots of 
%big players stepped into this area, such as Amazon, Microsoft and Google, and 
%In~\cite{chung2016using}, the authors evaluate the performance
%of containers and virtual machines by running benchmarks. 